name: Odoo CI

on:
  push:
    branches: [dev, test, main]
  pull_request:
    branches: [dev, test, main]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: odoo
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        options: >-
          --health-cmd="pg_isready -U odoo -d odoo"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=6

    container:
      image: odoo:18
      options: --user root

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Mostrar versiones
        run: |
          odoo --version || true
          python3 --version
          psql --version || true

      - name: Preparar entorno virtual y flake8
        run: |
          apt-get update
          apt-get install -y python3-venv
          python3 -m venv venv
          . venv/bin/activate
          pip install --no-cache-dir flake8
        shell: bash

      - name: Lint (flake8)
        run: |
          . venv/bin/activate
          flake8 custom_addons --max-line-length=120
        shell: bash

      - name: Detectar módulos con manifest
        id: mods
        run: |
          MODS=$(find custom_addons -mindepth 1 -maxdepth 1 -type d \
                -exec test -f "{}/__manifest__.py" \; -print \
                | xargs -n1 basename | paste -sd "," -)
          echo "MODS=$MODS"
          echo "MODS=$MODS" >> $GITHUB_ENV

      - name: Ejecutar tests
        env:
          MODS: ${{ env.MODS }}
        run: |
          echo "Instalando módulos: $MODS"
          odoo \
            --addons-path=/usr/lib/python3/dist-packages/odoo/addons,${GITHUB_WORKSPACE}/custom_addons \
            --db_host=postgres \
            --db_port=5432 \
            --db_user=odoo \
            --db_password=odoo \
            --database=odoo \
            --without-demo=all \
            --workers=0 \
            --init="$MODS" \
            --test-enable \
            --stop-after-init \
            --log-level=test
